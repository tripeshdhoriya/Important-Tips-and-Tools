1. Generate a Private Key (if you don't have one):
If you don't have a private key yet, you can generate one using OpenSSL. Run the following command:

	openssl genpkey -algorithm RSA -out key.pem


2.Generate a Certificate Signing Request (CSR):
Next, generate a CSR using the private key:

	openssl req -new -key key.pem -out csr.pem

Follow the prompts to enter the relevant information about your server.

3. Self-Sign the Certificate (Optional):
If you want to create a self-signed certificate, you can do so using the following command:

	openssl x509 -req -days 365 -in csr.pem -signkey key.pem -out cert.pem

Adjust the days parameter as needed for the validity period of the certificate.

4.Generate PKCS#12 File:
Once you have both the private key and the certificate (either self-signed or signed by a CA), you can generate the PKCS#12 file:

	openssl pkcs12 -export -out jetty.pkcs12  -inkey key.pem -in cert.pem

If you have a chain of intermediate certificates, you can include them in the command:

	openssl pkcs12 -export -out jetty.pkcs12 -inkey key.pem -in cert.pem -certfile chain.pem
	
	
5. Convert PKCS#12 to Java KeyStore (JKS):
Use the keytool command to import the PKCS#12 file and create a Java KeyStore:

	keytool -importkeystore -srckeystore jetty.pkcs12  -srcstoretype PKCS12 -destkeystore keystore -deststoretype JKS
	
#####################################################################################	
Without using PKCS#12 you can cretate keystore  direclty as using below command
	keytool -genkey -keyalg RSA -keystore your_keystore.jks -keysize 2048